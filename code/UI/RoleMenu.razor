@using System
@using System.Text
@using Sandbox
@using Sandbox.UI

@namespace ThekiFake.Courtroom
@inherits Panel
@attribute [StyleSheet("/UI/RoleMenu.scss")]

<root>
	<div id="role-main">
		<span>
			<label>Hello, </label>
			<img class="avatar" src="avatar:@Game.LocalClient.SteamId" alt="" />
			<label style="font-weight:bold;">@Game.LocalClient.Name</label>
		</span>
		<label style="font-weight:bold;font-size:100px;">Choose your role</label>
		<div class="role-menu">
			@* TODO: Add an indicator to these representing player names if the position is already taken *@
			@* AND HAVE IT UPDATE *@
			@foreach ( var role in CourtroomGame.Current.Roles )
			{
				<div class="btn" style="padding:12px;margin:6px;flex-direction:column" onclick="@(() => { Become( role.Key ); })">
					<label>@role.Key</label>
					@if ( role.Value.Entity is not null )
                    {
                    	<label style="font-size:35px;font-style:italic;">@(role.Value.Entity.Client.Name)</label>
                    }
				</div>
			}
		</div>
		<label style="font-weight:bold;font-size:50px;" @ref="ErrorLabel"></label>
	</div>
	<div id="role-leaderboard">
		<label>Most messages sent</label>
		<Leaderboard @ref="Leaderboard" />
		<a class="btn" onclick="@(() => { Leaderboard.Update(); })">Refresh</a>
	</div>
	<div id="credits">
		<label>Callout voicelines by TommuVA</label>
		<label>Exclamation sound effect from Phoenix Wright: Ace Attorney by Capcom</label>
	</div>
</root>

@code
{
	public static RoleMenu Current;
	public Label ErrorLabel;
	public Leaderboard Leaderboard;

	public RoleMenu()
	{
		Current = this;
	}
	
	private static void Become( string name )
	{
		CourtroomGame.BecomePosition( name );
	}

	protected override int BuildHash()
	{
		return HashCode.Combine( CourtroomGame.Current.Roles );
	}
}
